
import java.awt.event.ItemEvent;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author admin
 */
public class AddWordpanel extends javax.swing.JPanel {

    private String typeOfWords = "V", imagePath = "", soundPath = "";

    /**
     * Creates new form AddWordpanel
     */
    public AddWordpanel() {
        initComponents();

        nameText.requestDefaultFocus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelAddword = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        mean = new javax.swing.JLabel();
        spelling = new javax.swing.JLabel();
        spellingText = new javax.swing.JTextField();
        suggest = new javax.swing.JLabel();
        image = new javax.swing.JLabel();
        imageButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        soundButton = new javax.swing.JButton();
        hashtag = new javax.swing.JLabel();
        hasgtagText = new javax.swing.JTextField();
        type = new javax.swing.JLabel();
        typeText = new javax.swing.JComboBox<>();
        addButton = new javax.swing.JButton();
        imageLink = new javax.swing.JLabel();
        soundLink = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        meanText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        suggestText = new javax.swing.JTextArea();

        PanelAddword.setBackground(new java.awt.Color(0, 204, 204));
        PanelAddword.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thêm từ mới", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        PanelAddword.setForeground(new java.awt.Color(204, 204, 204));

        name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setText("<html><p>Từ<code style=\"color:red\">*</code></p></html>");

        nameText.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        nameText.setFocusTraversalPolicyProvider(true);

        mean.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        mean.setForeground(new java.awt.Color(255, 255, 255));
        mean.setText("<html><p>Dịch nghĩa<code style=\"color:red\">*</code></p></html>");

        spelling.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        spelling.setForeground(new java.awt.Color(255, 255, 255));
        spelling.setText("<html><p>Phiên âm<code style=\"color:red\">*</code></p></html>");

        spellingText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spellingTextActionPerformed(evt);
            }
        });

        suggest.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        suggest.setForeground(new java.awt.Color(255, 255, 255));
        suggest.setText("<html><p>Gợi ý<code style=\"color:red\">*</code></p></html>");

        image.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        image.setForeground(new java.awt.Color(255, 255, 255));
        image.setText("<html><p>Ảnh minh họa<code style=\"color:red\">*</code></p></html>");

        imageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/detail/icons8_image_15px.png"))); // NOI18N
        imageButton.setText("Image");
        imageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("File ghi âm");

        soundButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/detail/icons8_music_15px.png"))); // NOI18N
        soundButton.setText("Sound");
        soundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soundButtonActionPerformed(evt);
            }
        });

        hashtag.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        hashtag.setForeground(new java.awt.Color(255, 255, 255));
        hashtag.setText("<html><p>Hashtag<code style=\"color:red\">*</code></p></html>");

        hasgtagText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hasgtagTextActionPerformed(evt);
            }
        });

        type.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        type.setForeground(new java.awt.Color(255, 255, 255));
        type.setText("<html><p>Phân loại<code style=\"color:red\">*</code></p></html>");

        typeText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "V", "N", "Adj", "Adv", "Vp", "Np", "idioms", "Clause" }));
        typeText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeTextItemStateChanged(evt);
            }
        });
        typeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeTextActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(51, 255, 0));
        addButton.setText("THÊM");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        imageLink.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        imageLink.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        imageLink.setToolTipText("");

        soundLink.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        soundLink.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jButton1.setBackground(new java.awt.Color(255, 153, 153));
        jButton1.setText("TRỞ LẠI");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("(ngăn cách bằng dấu phẩy)");

        meanText.setColumns(20);
        meanText.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        meanText.setLineWrap(true);
        meanText.setRows(5);
        meanText.setWrapStyleWord(true);
        jScrollPane1.setViewportView(meanText);

        suggestText.setColumns(20);
        suggestText.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        suggestText.setLineWrap(true);
        suggestText.setRows(5);
        suggestText.setWrapStyleWord(true);
        jScrollPane2.setViewportView(suggestText);

        javax.swing.GroupLayout PanelAddwordLayout = new javax.swing.GroupLayout(PanelAddword);
        PanelAddword.setLayout(PanelAddwordLayout);
        PanelAddwordLayout.setHorizontalGroup(
            PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAddwordLayout.createSequentialGroup()
                .addComponent(addButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addGroup(PanelAddwordLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAddwordLayout.createSequentialGroup()
                        .addComponent(type)
                        .addGap(18, 18, 18))
                    .addGroup(PanelAddwordLayout.createSequentialGroup()
                        .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(PanelAddwordLayout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(76, 76, 76)
                                    .addComponent(soundButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PanelAddwordLayout.createSequentialGroup()
                                    .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39)
                                    .addComponent(imageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(PanelAddwordLayout.createSequentialGroup()
                                .addComponent(hashtag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE))
                    .addGroup(PanelAddwordLayout.createSequentialGroup()
                        .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(suggest)
                            .addComponent(spelling)
                            .addComponent(mean, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(185, 185, 185)))
                .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAddwordLayout.createSequentialGroup()
                        .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelAddwordLayout.createSequentialGroup()
                                .addComponent(typeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 351, Short.MAX_VALUE))
                            .addComponent(hasgtagText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(77, 77, 77))
                    .addGroup(PanelAddwordLayout.createSequentialGroup()
                        .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spellingText, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(imageLink, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                                .addComponent(soundLink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        PanelAddwordLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addButton, jButton1});

        PanelAddwordLayout.setVerticalGroup(
            PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAddwordLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mean, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAddwordLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(spelling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelAddwordLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spellingText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suggest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAddwordLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hashtag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(PanelAddwordLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hasgtagText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(imageButton))
                    .addComponent(imageLink, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(soundButton))
                    .addComponent(soundLink, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addGroup(PanelAddwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(addButton)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        PanelAddwordLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addButton, jButton1});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelAddword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelAddword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void imageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageButtonActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(new File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("IMAGE", "jpg", "gif", "png", "jpeg");
        jfc.addChoosableFileFilter(filter);
        jfc.setFileFilter(filter);
        int returnValue = jfc.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedImage = jfc.getSelectedFile();
            imagePath = selectedImage.getAbsolutePath();
            imageLink.setText(imagePath);
        }
    }//GEN-LAST:event_imageButtonActionPerformed

    private void soundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soundButtonActionPerformed
        JFileChooser jFileChooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jFileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("SOUND", "mp3", "wav", "m4a");
        jFileChooser.addChoosableFileFilter(filter);
        jFileChooser.setFileFilter(filter);
        int returnValue = jFileChooser.showOpenDialog(null);
        // int returnValue = jfc.showSaveDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedSound = jFileChooser.getSelectedFile();
            soundPath = selectedSound.getAbsolutePath();
            soundLink.setText(soundPath);
        }
    }//GEN-LAST:event_soundButtonActionPerformed

    private void typeTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeTextItemStateChanged
        Object item = evt.getItem();
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.typeOfWords = item.toString();
        }
    }//GEN-LAST:event_typeTextItemStateChanged

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        if (nameText.getText().equals("")
                || meanText.getText().equals("")
                || spellingText.getText().equals("")
                || suggestText.getText().equals("")
                || hasgtagText.getText().equals("")
                || imagePath.equals("")) {
            JOptionPane.showMessageDialog(null, "Missing!!!");
        } else {
//            try {
//                Connection con = DBUtil.getConnection();
//                PreparedStatement ps = con.prepareCall("insert into " + DBUtil.TABLE_NAME + " (word,mean,spell,suggest,hasgtag,type,image,sound,pass,time) values(?,?,?,?,?,?,?,?,?,CURDATE())");
//                InputStream im = new FileInputStream(new File(imagePath));
//                ps.setString(1, nameText.getText());
//                ps.setString(2, meanText.getText());
//                ps.setString(3, spellingText.getText());
//                ps.setString(4, suggestText.getText());
//                ps.setString(5, hasgtagText.getText() + ",");
//                ps.setString(6, this.typeOfWords);
//                ps.setBlob(7, im);
//                if (soundPath.equals("")) {
//                    ps.setString(8, null);
//                } else {
////                    InputStream so = new FileInputStream(new File(soundPath));
//                    ps.setString(8, soundPath);
//                }
//                ps.setInt(9, 0);
//                ps.executeUpdate();
//                JOptionPane.showMessageDialog(null, "Successed");
//                AddWordSuccessed();
//            } catch (Exception e) {
//                System.out.println(e.toString());
//                JOptionPane.showMessageDialog(null, "Failsed");
//
//                setVisible(false);
//            }
            Boolean a = DBUtil.addWord(nameText.getText(), meanText.getText(), spellingText.getText(), suggestText.getText(), hasgtagText.getText(), this.typeOfWords, imagePath, soundPath);
            if (a) {
                AddWordSuccessed();
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFrame parent = Utitilities.findJFrameOf(this);
        if (parent != null) {
            parent.getContentPane().removeAll();
            parent.setContentPane(new MenuPanelrm());
            parent.pack();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void typeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeTextActionPerformed

    private void hasgtagTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hasgtagTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hasgtagTextActionPerformed

    private void spellingTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spellingTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spellingTextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelAddword;
    private javax.swing.JButton addButton;
    private javax.swing.JTextField hasgtagText;
    private javax.swing.JLabel hashtag;
    private javax.swing.JLabel image;
    private javax.swing.JButton imageButton;
    private javax.swing.JLabel imageLink;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel mean;
    private javax.swing.JTextArea meanText;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nameText;
    private javax.swing.JButton soundButton;
    private javax.swing.JLabel soundLink;
    private javax.swing.JLabel spelling;
    private javax.swing.JTextField spellingText;
    private javax.swing.JLabel suggest;
    private javax.swing.JTextArea suggestText;
    private javax.swing.JLabel type;
    private javax.swing.JComboBox<String> typeText;
    // End of variables declaration//GEN-END:variables

    private void AddWordSuccessed() {
        nameText.setText("");
        meanText.setText("");
        spellingText.setText("");
        suggestText.setText("");
        hasgtagText.setText("");
        imagePath = "";
        soundPath = "";
        imageLink.setText(imagePath);
        soundLink.setText(soundPath);
    }
}
