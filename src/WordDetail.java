
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javazoom.jl.player.Player;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

public class WordDetail extends javax.swing.JPanel {

    private String typeOfWords = "V", imagePath = "", soundPath = "";
    private boolean haveSound;
    private String sound;
    Blob mp3;

    public WordDetail() {
        initComponents();
        show_Details(SearchPanel.currentId);
        setEditable(false);
        saveBT.setVisible(false);
    }

    private void setEditable(Boolean yn) {
        saveBT.setVisible(yn);
        Type.setVisible(yn);
        imagelink.setVisible(yn);
        soundlink.setVisible(yn);
        wordText.setEditable(yn);
        meanText.setEditable(yn);
        spellText.setEditable(yn);
        suggestText.setEditable(yn);
        hashtagText.setEditable(yn);

        editBT.setVisible(!yn);

        imageLink.setText("");
        soundLink.setText("");
    }
//Hàm lấy thông tin từ và hiển thị ra màn hình

    private void show_Details(Integer id) {
        Connection con = DBUtil.getConnection();
        Statement st;
        ResultSet rs;

        try {
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM " + DBUtil.TABLE_NAME + " WHERE id=" + id);
            while (rs.next()) {
                byte[] img = rs.getBytes("image");
                sound = rs.getString("sound");
//                mp3 = rs.getBlob("sound");
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage();
                Image myImg = im.getScaledInstance(280, 273, Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(myImg);
                imageLabel.setIcon(newImage);
                wordText.setText(rs.getString("word"));
                meanText.setText(rs.getString("mean"));
                spellText.setText(rs.getString("spell"));
                suggestText.setText(rs.getString("suggest"));
                hashtagText.setText(rs.getString("hasgtag").substring(0, rs.getString("hasgtag").length() - 1));
                TypeText.setText(rs.getString("type"));
                if (sound == null) {
                    haveSound = false;
                } else {
                    haveSound = true;
                }

            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Word detail false");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        word = new javax.swing.JLabel();
        wordText = new javax.swing.JTextField();
        Listen = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        Mean = new javax.swing.JLabel();
        meanText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        spellText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        suggestText = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        hashtagText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Type = new javax.swing.JComboBox<>();
        editBT = new javax.swing.JButton();
        saveBT = new javax.swing.JButton();
        deleteBT = new javax.swing.JButton();
        TypeText = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        imagelink = new javax.swing.JButton();
        soundlink = new javax.swing.JButton();
        imageLink = new javax.swing.JLabel();
        soundLink = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 600));

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        word.setForeground(new java.awt.Color(255, 255, 255));
        word.setText("Word");

        Listen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/detail/icons8_room_sound_filled_15px.png"))); // NOI18N
        Listen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListenActionPerformed(evt);
            }
        });

        Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/detail/icons8_rewind_filled_25px.png"))); // NOI18N
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Mean.setForeground(new java.awt.Color(255, 255, 255));
        Mean.setText("Mean");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Spell");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Suggest");

        suggestText.setColumns(20);
        suggestText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        suggestText.setLineWrap(true);
        suggestText.setRows(5);
        suggestText.setWrapStyleWord(true);
        jScrollPane1.setViewportView(suggestText);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Hashtag");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Type");

        Type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "V", "N", "Adj", "Adv", "Vp", "Np", "idioms", "Clause" }));
        Type.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TypeItemStateChanged(evt);
            }
        });
        Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypeActionPerformed(evt);
            }
        });

        editBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/detail/icons8_edit_property_15px.png"))); // NOI18N
        editBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBTActionPerformed(evt);
            }
        });

        saveBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/detail/icons8_save_filled_15px_1.png"))); // NOI18N
        saveBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBTActionPerformed(evt);
            }
        });

        deleteBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/detail/icons8_delete_15px.png"))); // NOI18N
        deleteBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTActionPerformed(evt);
            }
        });

        TypeText.setBackground(new java.awt.Color(255, 255, 255));
        TypeText.setForeground(new java.awt.Color(255, 255, 255));

        imagelink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/detail/icons8_image_15px.png"))); // NOI18N
        imagelink.setText("Image upload");
        imagelink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imagelinkActionPerformed(evt);
            }
        });

        soundlink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/detail/icons8_music_15px.png"))); // NOI18N
        soundlink.setText("Sound upload");
        soundlink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soundlinkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(soundlink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(imagelink, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(imageLink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(soundLink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(TypeText, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(240, 240, 240)
                                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(167, 167, 167))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(word, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .addComponent(Mean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(meanText, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(editBT, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(wordText, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Listen, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(spellText, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deleteBT, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(saveBT, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(hashtagText, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(284, 284, 284)
                                .addComponent(Back)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(word)
                            .addComponent(wordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Listen))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Mean)
                            .addComponent(meanText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editBT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(spellText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(saveBT)))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(hashtagText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(TypeText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(Type)))
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageLink, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagelink))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(soundLink, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(soundlink))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Listen, editBT, saveBT});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 937, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
//Phát âm thanh
    private void ListenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListenActionPerformed
        //Nếu ko có âm thanh thì dùng text2speech
        if (haveSound == false) {

            Text2Speech speak = new Text2Speech();
            speak.doSpeak(wordText.getText());
        } 
        //Nếu có thì phát từ file
        else {
            String soundType = sound.substring(sound.length() - 3);
            if (soundType.equals("mp3")) {
                try {
                    FileInputStream so = new FileInputStream(new File(sound));
                    Player player = new Player(so);
                    player.play();
                    player.close();
                } catch (Exception e) {
                }
            } else {
                try {
                    FileInputStream so = new FileInputStream(new File(sound));
                    AudioStream audio = new AudioStream(so);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                }
            }
        }
    }//GEN-LAST:event_ListenActionPerformed
//Quay lại bảng tìm kiếm
    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        JFrame parent = Utitilities.findJFrameOf(this);
        if (parent != null) {
            parent.getContentPane().removeAll();
            parent.setContentPane(new SearchPanel());
            parent.pack();
        }
    }//GEN-LAST:event_BackActionPerformed

    private void editBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBTActionPerformed
        setEditable(true);
        switch (TypeText.getText()) {
            case "V":
                Type.setSelectedIndex(0);
                break;
            case "N":
                Type.setSelectedIndex(1);
                break;
            case "Adj":
                Type.setSelectedIndex(2);
                break;
            case "Adv":
                Type.setSelectedIndex(3);
                break;
            case "Vp":
                Type.setSelectedIndex(4);
                break;
            case "Np":
                Type.setSelectedIndex(5);
                break;
            case "idioms":
                Type.setSelectedIndex(6);
                break;
            case "Clause":
                Type.setSelectedIndex(7);
                break;
        }
    }//GEN-LAST:event_editBTActionPerformed

    private void deleteBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Do you want to delete?", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.NO_OPTION) {

        } else if (response == JOptionPane.YES_OPTION) {
//            try {
//                Connection conn = DBUtil.getConnection();
//                String query = "delete from " + DBUtil.TABLE_NAME + " where id = " + SearchPanel.currentId;
//                PreparedStatement preparedStmt = conn.prepareStatement(query);
//                preparedStmt.execute();
//
//                JFrame parent = Utitilities.findJFrameOf(this);
//                if (parent != null) {
//                    parent.getContentPane().removeAll();
//                    parent.setContentPane(new SearchPanel());
//                    parent.pack();
//                }
//            } catch (Exception e) {
//                System.err.println(e.getMessage());
//            }
            DBUtil.deleteWord();
            JFrame parent = Utitilities.findJFrameOf(this);
            if (parent != null) {
                parent.getContentPane().removeAll();
                parent.setContentPane(new SearchPanel());
                parent.pack();
            }

        } else if (response == JOptionPane.CLOSED_OPTION) {

        }
    }//GEN-LAST:event_deleteBTActionPerformed

    private void saveBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBTActionPerformed
        if (wordText.getText().equals("")
                || meanText.getText().equals("")
                || spellText.getText().equals("")
                || suggestText.getText().equals("")
                || hashtagText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Missing!!!");
        } else {

            int response = JOptionPane.showConfirmDialog(null, "Do you want to save?", "Confirm",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.NO_OPTION) {
                setEditable(false);
                show_Details(SearchPanel.currentId);
            } else if (response == JOptionPane.YES_OPTION) {
//                if (imagePath.equals("") == false && soundPath.equals("") == false) {
//                    try {
//                        Connection conn = DBUtil.getConnection();
//                        String query = "UPDATE " + DBUtil.TABLE_NAME + " SET word= ?, mean= ?, spell= ?,suggest= ?,hasgtag= ?,type= ?,image= ?,sound= ?  WHERE id = " + SearchPanel.currentId;
//                        PreparedStatement ps = conn.prepareStatement(query);
//                        ps.setString(1, wordText.getText());
//                        ps.setString(2, meanText.getText());
//                        ps.setString(3, spellText.getText());
//                        ps.setString(4, suggestText.getText());
//                        ps.setString(5, hashtagText.getText() + ",");
//                        ps.setString(6, this.typeOfWords);
//                        InputStream im = new FileInputStream(new File(imagePath));
//                        ps.setBlob(7, im);
////                        InputStream so = new FileInputStream(new File(soundPath));
//                        ps.setString(8, soundPath);
//                        ps.executeUpdate();
//                    } catch (Exception e) {
//                        System.err.println(e.getMessage());
//                    }
//                } else if (imagePath.equals("") && soundPath.equals("") == false) {
//                    try {
//                        Connection conn = DBUtil.getConnection();
//                        String query = "UPDATE " + DBUtil.TABLE_NAME + " SET word= ?, mean= ?, spell= ?,suggest= ?,hasgtag= ?,type= ?,sound= ?  WHERE id = " + SearchPanel.currentId;
//                        PreparedStatement ps = conn.prepareStatement(query);
//                        ps.setString(1, wordText.getText());
//                        ps.setString(2, meanText.getText());
//                        ps.setString(3, spellText.getText());
//                        ps.setString(4, suggestText.getText());
//                        ps.setString(5, hashtagText.getText() + ",");
//                        ps.setString(6, this.typeOfWords);
////                        InputStream so = new FileInputStream(new File(soundPath));
//                        ps.setString(7, soundPath);
//                        ps.executeUpdate();
//                    } catch (Exception e) {
//                        System.err.println(e.getMessage());
//                    }
//                } else if (imagePath.equals("") == false && soundPath.equals("")) {
//                    try {
//                        Connection conn = DBUtil.getConnection();
//                        String query = "UPDATE " + DBUtil.TABLE_NAME + " SET word= ?, mean= ?, spell= ?,suggest= ?,hasgtag= ?,type= ?,image= ?  WHERE id = " + SearchPanel.currentId;
//                        PreparedStatement ps = conn.prepareStatement(query);
//                        ps.setString(1, wordText.getText());
//                        ps.setString(2, meanText.getText());
//                        ps.setString(3, spellText.getText());
//                        ps.setString(4, suggestText.getText());
//                        ps.setString(5, hashtagText.getText() + ",");
//                        ps.setString(6, this.typeOfWords);
//                        InputStream im = new FileInputStream(new File(imagePath));
//                        ps.setBlob(7, im);
//                        ps.executeUpdate();
//                    } catch (Exception e) {
//                        System.err.println(e.getMessage());
//                    }
//                } else if (imagePath.equals("") && soundPath.equals("")) {
//                    try {
//                        Connection conn = DBUtil.getConnection();
//                        String query = "UPDATE " + DBUtil.TABLE_NAME + " SET word= ?, mean= ?, spell= ?,suggest= ?,hasgtag= ?,type= ?  WHERE id = " + SearchPanel.currentId;
//                        PreparedStatement ps = conn.prepareStatement(query);
//                        ps.setString(1, wordText.getText());
//                        ps.setString(2, meanText.getText());
//                        ps.setString(3, spellText.getText());
//                        ps.setString(4, suggestText.getText());
//                        ps.setString(5, hashtagText.getText() + ",");
//                        ps.setString(6, this.typeOfWords);
//                        ps.executeUpdate();
//                    } catch (Exception e) {
//                        System.err.println(e.getMessage());
//                    }
//                }
                DBUtil.editWord(wordText.getText(), meanText.getText(), spellText.getText(), suggestText.getText(), hashtagText.getText(), this.typeOfWords, imagePath, soundPath);
                setEditable(false);
                show_Details(SearchPanel.currentId);
            } else if (response == JOptionPane.CLOSED_OPTION) {
            }
        }
    }//GEN-LAST:event_saveBTActionPerformed

    private void TypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TypeItemStateChanged
        Object item = evt.getItem();
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.typeOfWords = item.toString();
        }
    }//GEN-LAST:event_TypeItemStateChanged

    private void imagelinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imagelinkActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(new File(System.getProperty("user.dir")));
        FileFilter filter = new FileNameExtensionFilter("IMAGE", new String[]{"gif", "png", " jpeg", "jpg"});
        jfc.addChoosableFileFilter(filter);
        jfc.setFileFilter(filter);
        int returnValue = jfc.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedImage = jfc.getSelectedFile();
            imagePath = selectedImage.getAbsolutePath();
            imageLink.setText(imagePath);
        }
    }//GEN-LAST:event_imagelinkActionPerformed

    private void soundlinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soundlinkActionPerformed
        JFileChooser jFileChooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jFileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("SOUND", "mp3", "wav");

        jFileChooser.addChoosableFileFilter(filter);
        jFileChooser.setFileFilter(filter);
        int returnValue = jFileChooser.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedSound = jFileChooser.getSelectedFile();
            soundPath = selectedSound.getAbsolutePath();
            soundLink.setText(soundPath);
        }
    }//GEN-LAST:event_soundlinkActionPerformed

    private void TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Listen;
    private javax.swing.JLabel Mean;
    private javax.swing.JComboBox<String> Type;
    private javax.swing.JLabel TypeText;
    private javax.swing.JButton deleteBT;
    private javax.swing.JButton editBT;
    private javax.swing.JTextField hashtagText;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel imageLink;
    private javax.swing.JButton imagelink;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField meanText;
    private javax.swing.JButton saveBT;
    private javax.swing.JLabel soundLink;
    private javax.swing.JButton soundlink;
    private javax.swing.JTextField spellText;
    private javax.swing.JTextArea suggestText;
    private javax.swing.JLabel word;
    private javax.swing.JTextField wordText;
    // End of variables declaration//GEN-END:variables
}
